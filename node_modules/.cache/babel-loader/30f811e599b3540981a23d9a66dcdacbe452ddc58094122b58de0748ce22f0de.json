{"ast":null,"code":"var _jsxFileName = \"/Users/borisfindell/Documents/Workspace/Expenses Manager/src/components/NewExpense/ExpenseForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\n/////////////////////////////////////////////////////////////////////////////////\n//Dos posibilidades distintas de usar el State:\n//una repitiendo el useState y cada una con su State, más código pero más clara\n//y bastante usada. La otra más ordenada, usando sólo un state con un objeto pero\n//menos usada y legible, aunque más eficiente.\n/////////////////////////////////////////////////////////////////////////////////\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpenseForm = props => {\n  _s();\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount:'',\n  //     enteredDate: ''\n  // })\n\n  // const titleChangeHandler = (event) => {\n  //     setEnteredTitle(event.target.value);\n  // setUserInput({\n  //      ...userInput,\n  //      enteredTitle: event.target.value});\n\n  //PARA EVITAR EL SPREAD OP, SI QUIERO MANTENER EL STATE PUEDO USAR ESTA FORMA\n\n  // setUserInput((prevState) => {\n  //     return {...prevState, enteredTitle: event.target.value}\n  // })\n\n  // }\n  // const amountChangeHandler = (event) => {\n  //     setEnteredAmount(event.target.value);\n  // setUserInput({\n  //     ...userInput,\n  //     enteredAmount: event.target.value});\n  // }\n  // const dateChangeHandler = (event) => {\n  // setEnteredDate(event.target.value);\n  // setUserInput({\n  //     ...userInput,\n  //     enteredDate: event.target.value});\n  // }\n\n  const inputChangeHandler = (ident, val) => {\n    if (ident === \"title\") {\n      setEnteredTitle(val);\n    } else if (ident === \"amount\") {\n      setEnteredAmount(val);\n    } else if (ident === \"date\") {\n      setEnteredDate(val);\n    }\n  };\n  const submitHandler = event => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate)\n    };\n    props.onSaveExpenseData(expenseData);\n    setEnteredTitle('');\n    setEnteredAmount('');\n    setEnteredDate('');\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expense__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Title\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: event => inputChangeHandler(\"title\", event.target.value),\n          value: enteredTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Amount\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          onChange: event => inputChangeHandler(\"amount\", event.target.value),\n          min: \"0.01\",\n          step: \"0.01\",\n          value: enteredAmount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"new-expense__control\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => inputChangeHandler(\"date\", event.target.value),\n          type: \"date\",\n          min: \"2019-01-01\",\n          max: \"2022-12-31\",\n          value: enteredDate\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-expenses__actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Expense\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(ExpenseForm, \"cQceuCgozgRBnFcek1NBqBcFFts=\");\n_c = ExpenseForm;\nexport default ExpenseForm;\nvar _c;\n$RefreshReg$(_c, \"ExpenseForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ExpenseForm","props","_s","enteredTitle","setEnteredTitle","enteredAmount","setEnteredAmount","enteredDate","setEnteredDate","inputChangeHandler","ident","val","submitHandler","event","preventDefault","expenseData","title","amount","date","Date","onSaveExpenseData","setIsEditing","onSubmit","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","min","step","max","onClick","onCancel","_c","$RefreshReg$"],"sources":["/Users/borisfindell/Documents/Workspace/Expenses Manager/src/components/NewExpense/ExpenseForm.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\n/////////////////////////////////////////////////////////////////////////////////\n//Dos posibilidades distintas de usar el State:\n//una repitiendo el useState y cada una con su State, más código pero más clara\n//y bastante usada. La otra más ordenada, usando sólo un state con un objeto pero\n//menos usada y legible, aunque más eficiente.\n/////////////////////////////////////////////////////////////////////////////////\n\nconst ExpenseForm = (props) => {\n  const [enteredTitle, setEnteredTitle] = useState(\"\");\n  const [enteredAmount, setEnteredAmount] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  // const [userInput, setUserInput] = useState({\n  //     enteredTitle: '',\n  //     enteredAmount:'',\n  //     enteredDate: ''\n  // })\n\n  // const titleChangeHandler = (event) => {\n  //     setEnteredTitle(event.target.value);\n  // setUserInput({\n  //      ...userInput,\n  //      enteredTitle: event.target.value});\n\n  //PARA EVITAR EL SPREAD OP, SI QUIERO MANTENER EL STATE PUEDO USAR ESTA FORMA\n\n  // setUserInput((prevState) => {\n  //     return {...prevState, enteredTitle: event.target.value}\n  // })\n\n  // }\n  // const amountChangeHandler = (event) => {\n  //     setEnteredAmount(event.target.value);\n  // setUserInput({\n  //     ...userInput,\n  //     enteredAmount: event.target.value});\n  // }\n  // const dateChangeHandler = (event) => {\n  // setEnteredDate(event.target.value);\n  // setUserInput({\n  //     ...userInput,\n  //     enteredDate: event.target.value});\n  // }\n\n  const inputChangeHandler = (ident, val) => {\n    if (ident === \"title\") {\n      setEnteredTitle(val);\n    } else if (ident === \"amount\") {\n      setEnteredAmount(val);\n    } else if (ident === \"date\") {\n      setEnteredDate(val);\n    }\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n    const expenseData = {\n      title: enteredTitle,\n      amount: enteredAmount,\n      date: new Date(enteredDate),\n    };\n    props.onSaveExpenseData(expenseData)\n    setEnteredTitle('')\n    setEnteredAmount('')\n    setEnteredDate('')\n    setIsEditing(false)\n\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className=\"new-expense__controls\">\n        <div className=\"new-expense__control\">\n          <label>Title</label>\n          <input\n            type=\"text\"\n            onChange={(event) =>\n              inputChangeHandler(\"title\", event.target.value)\n            }\n            value={enteredTitle}\n          ></input>\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Amount</label>\n          <input\n            type=\"number\"\n            onChange={(event) =>\n              inputChangeHandler(\"amount\", event.target.value)\n            }\n            min=\"0.01\"\n            step=\"0.01\"\n            value={enteredAmount}\n          ></input>\n        </div>\n        <div className=\"new-expense__control\">\n          <label>Date</label>\n          <input\n            onChange={(event) => inputChangeHandler(\"date\", event.target.value)}\n            type=\"date\"\n            min=\"2019-01-01\"\n            max=\"2022-12-31\"\n            value={enteredDate}\n          ></input>\n        </div>\n      </div>\n      <div className=\"new-expenses__actions\">\n        <button type=\"button\" onClick={props.onCancel} >Cancel</button>\n        <button type=\"submit\">Add Expense</button>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}